/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    coaches: Coach;
    media: Media;
    'tank-of-the-week': TankOfTheWeek;
    'replay-of-the-week': ReplayOfTheWeek;
    orders: Order;
    sessions: Session;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: number;
  role: 'admin' | 'user' | 'coach';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Coach {
  id: number;
  user?: (number | null) | User;
  name: string;
  slug?: string | null;
  tomatogg: string;
  twitchtv?: string | null;
  youtube?: string | null;
  about?: string | null;
  region: 'NA' | 'EU' | 'APAC';
  preference: 'Random Battles' | '7v7 Competitive' | '15v15 Competitive' | 'Calling' | 'Onslaught';
  categories: ('Random Battles' | '7v7 Competitive' | '15v15 Competitive' | 'Calling' | 'Onslaught')[];
  priceId?: string | null;
  stripeId?: string | null;
  rate: number;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: number;
  user?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface TankOfTheWeek {
  id: number;
  title: string;
  slug?: string | null;
  description: string;
  type?: ('Medium Tank' | 'Light Tank' | 'Heavy Tank' | 'Tank Destroyer' | 'Artillery') | null;
  nation?:
    | ('USA' | 'Germany' | 'USSR' | 'UK' | 'France' | 'Czech' | 'Japan' | 'China' | 'Poland' | 'Sweden' | 'Italy')
    | null;
  link: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
export interface ReplayOfTheWeek {
  id: number;
  title: string;
  slug?: string | null;
  description: string;
  link: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
export interface Order {
  id: number;
  _isPaid: boolean;
  user: number | User;
  sessions: (number | Session)[];
  updatedAt: string;
  createdAt: string;
}
export interface Session {
  id: number;
  feedback?: string | null;
  date?: string | null;
  students: {
    student: number | User;
    id?: string | null;
  }[];
  coach: number | Coach;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}